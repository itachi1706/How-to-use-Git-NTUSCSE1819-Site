@startuml

    namespace sg.edu.ntu.scse.cz2002.ui {

        class ReservationMenuUI [[../sg/edu/ntu/scse/cz2002/ui/ReservationMenuUI.html]] {
            -input: Scanner
            -MAX_TABLES: int
            #generateMenuScreen(): int
            -createReservationBooking(): void
            -findTableForReservation(numPax:int, resvDate:LocalDate, resvSession:char): int
            -checkReservationBooking(): void
            -removeReservationBooking(): void
            -listReservations(): void
            -checkExpiredReservations(): void
            -printReservationLine(telNo:String): int
            -printReservationLine(r:Reservation): void
            -checkMorningSessionDate(date:LocalDate, isToday:boolean): boolean
            -checkEveningSessionDate(date:LocalDate, isToday:boolean): boolean
        }

        class MenuChoiceInvalidException [[../sg/edu/ntu/scse/cz2002/ui/MenuChoiceInvalidException.html]] {
            +MenuChoiceInvalidException(tag:String)
        }

        class FoodMenuUI [[../sg/edu/ntu/scse/cz2002/ui/FoodMenuUI.html]] {
            ~sc: Scanner
            #generateMenuScreen(): int
            +printMenu(): void
            +addNewMenuItem(newItemName:String, newItemType:int, newItemDescription:String, newItemPrice:double): void
            +editMenuItem(targetItemID:int, editItemName:String, editItemType:int, editItemDescription:String, editItemPrice:double): void
            +deleteMenuItem(targetItemID:int): void
            {static} +retrieveMenuItem(targetItemID:int): MenuItem
            {static} +retrieveMenuItemListFiltered(targetItemType:MenuItem.MenuItemType): ArrayList<MenuItem>
        }

        class PromotionMenuUI [[../sg/edu/ntu/scse/cz2002/ui/PromotionMenuUI.html]] {
            ~sc: Scanner
            #generateMenuScreen(): int
            +printPromotion(): void
            +addNewPromotion(newPromoName:String, newPromoPrice:double, newPromoMain:int, newPromoDessert:int, newPromoDrink:int): void
            +editPromotion(targetPromoID:int, editPromoName:String, editPromoPrice:double, editPromoMain:int, editPromoDessert:int, editPromoDrink:int): void
            +deletePromotion(targetPromoID:int): void
            {static} +retrievePromotion(targetPromoID:int): Promotion
        }

        class CheckoutMenuUI [[../sg/edu/ntu/scse/cz2002/ui/CheckoutMenuUI.html]] {
            {static} -RECEIPT_SUBFOLDER: String
            #generateMenuScreen(): int
            -checkout(): boolean
            -reprint(): void
            -generateReceipt(o:Order, total:double, paid:double, type:Invoice.PaymentType): ArrayList<String>
            -centerText(toCenter:String, length:int, spacer:char): String
            -spacer(length:int, spacer:char): String
            -requestCashPayment(total:double): double
            -writeReceipt(receipt:ArrayList<String>, receiptId:int): boolean
            -printOrderDetails(o:Order): double
        }

        class MainMenuUI [[../sg/edu/ntu/scse/cz2002/ui/MainMenuUI.html]] {
            #generateMenuScreen(): int
            -checkTableAvailability(): void
        }

        class StaffMgmtMenuUI [[../sg/edu/ntu/scse/cz2002/ui/StaffMgmtMenuUI.html]] {
            #generateMenuScreen(): int
            -createNewStaff(): void
            -editStaffInfo(): void
            -removeStaff(): void
            -listAllStaff(): void
        }

        abstract class BaseMenu [[../sg/edu/ntu/scse/cz2002/ui/BaseMenu.html]] {
            {static} -PRINT_WINDOW_MAX_SIZE: int
            +startMainMenu(): boolean
            {static} #printHeader(headerName:String): void
            {static} #printHeader(headerName:String, length:int): void
            {static} #printBreaks(length:int): void
            {static} #printBreaks(): void
            {static} #doMenuChoice(max:int, specialEscape:int): int
            {abstract} #generateMenuScreen(): int
        }

        class SalesRevenueReportMenuUI [[../sg/edu/ntu/scse/cz2002/ui/SalesRevenueReportMenuUI.html]] {
            #generateMenuScreen(): int
            -generateDayReport(): void
            -generatePeriodReport(): void
        }

        class OrderMenuUI [[../sg/edu/ntu/scse/cz2002/ui/OrderMenuUI.html]] {
            {static} +incompleteOrders: ArrayList<Order>
            #generateMenuScreen(): int
            -editOrderMenuScreen(orderNumber:int): void
            -createOrder(): void
            -viewOrder(): void
            -editOrder(): void
            -addOrderItem(o:Order): void
            -addAlaCarteItem(o:Order): void
            -editOrderItem(o:Order): void
            -removeOrderItem(o:Order): void
            -findOrder(id:int, allowFromPaid:boolean): Order
            {static} +printOrderList(orders:ArrayList<Order>, tag:String, tableSort:boolean): void
            -printOrderDetails(o:Order): void
            -getOrderItemToEdit(o:Order, prompt:String): int
            {static} +printOrderItems(items:ArrayList<OrderItem>, prettyPrint:boolean): void
        }

        BaseMenu <|-- ReservationMenuUI

        class java.lang.IllegalStateException
        java.lang.IllegalStateException <|-- MenuChoiceInvalidException

        BaseMenu <|-- FoodMenuUI

        BaseMenu <|-- PromotionMenuUI

        BaseMenu <|-- CheckoutMenuUI

        BaseMenu <|-- MainMenuUI

        BaseMenu <|-- StaffMgmtMenuUI

        BaseMenu <|-- SalesRevenueReportMenuUI

        BaseMenu <|-- OrderMenuUI

    }


    center footer UMLDoclet 1.1.3, PlantUML 1.2018.12
@enduml
