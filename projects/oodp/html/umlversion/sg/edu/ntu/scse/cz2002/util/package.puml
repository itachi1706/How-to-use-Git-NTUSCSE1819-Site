@startuml

    namespace sg.edu.ntu.scse.cz2002.util {

        class CSVBaseHelper [[../sg/edu/ntu/scse/cz2002/util/CSVBaseHelper.html]] {
            #readAll(reader:BufferedReader, skip:int): List<String[]>
            #writeToCsvFile(writeStrings:List<String[]>, writer:BufferedWriter): void
        }

        class TableCSVHelper [[../sg/edu/ntu/scse/cz2002/util/TableCSVHelper.html]] {
            {static} -mInstance: TableCSVHelper
            -tableCsv: String
            -TableCSVHelper()
            + --TableCSVHelper-- (filename:String)
            {static} +getInstance(): TableCSVHelper
            +readFromCsv(): ArrayList<Table>
            + --writeToCsv-- (tables:ArrayList<Table>): void
        }

        interface ICsvSerializable [[../sg/edu/ntu/scse/cz2002/util/ICsvSerializable.html]] {
            {abstract} +toCsv(): String[]
        }

        class PromoCSVHelper [[../sg/edu/ntu/scse/cz2002/util/PromoCSVHelper.html]] {
            {static} -pInstance: PromoCSVHelper
            -promotionCsv: String
            {static} +getInstance(): PromoCSVHelper
            +readFromCsv(): ArrayList<Promotion>
            +writeToCsv(promotions:ArrayList<Promotion>): void
        }

        class InvoiceCSVHelper [[../sg/edu/ntu/scse/cz2002/util/InvoiceCSVHelper.html]] {
            {static} -mInstance: InvoiceCSVHelper
            -orderCsv: String
            -InvoiceCSVHelper()
            + --InvoiceCSVHelper-- (filename:String)
            {static} +getInstance(): InvoiceCSVHelper
            +readFromCsv(): ArrayList<Invoice>
            +writeToCsv(items:ArrayList<Invoice>): void
        }

        class StaffCSVHelper [[../sg/edu/ntu/scse/cz2002/util/StaffCSVHelper.html]] {
            {static} -mInstance: StaffCSVHelper
            -staffCsv: String
            -StaffCSVHelper()
            + --StaffCSVHelper-- (filename:String)
            {static} +getInstance(): StaffCSVHelper
            +readFromCsv(): ArrayList<Staff>
            +writeToCsv(staffs:ArrayList<Staff>): void
        }

        class FileIOHelper [[../sg/edu/ntu/scse/cz2002/util/FileIOHelper.html]] {
            {static} -init(): File
            {static} +exists(name:String): boolean
            {static} +getFile(name:String): File
            {static} +getFileBufferedReader(name:String): BufferedReader
            {static} +getFileBufferedWriter(name:String): BufferedWriter
        }

        class ReservationCSVHelper [[../sg/edu/ntu/scse/cz2002/util/ReservationCSVHelper.html]] {
            {static} -mInstance: ReservationCSVHelper
            -reservationCsv: String
            -ReservationCSVHelper()
            + --ReservationCSVHelper-- (filename:String)
            {static} +getInstance(): ReservationCSVHelper
            +readFromCsv(): ArrayList<Reservation>
            +writeToCsv(reservations:ArrayList<Reservation>): void
        }

        class ScannerHelper [[../sg/edu/ntu/scse/cz2002/util/ScannerHelper.html]] {
            {static} +instance: Scanner
            {static} +getIntegerInput(prompt:String): int
            {static} +getIntegerInput(prompt:String, min:int): int
            {static} +getIntegerInput(prompt:String, min:int, max:int): int
            {static} +getIntegerInput(prompt:String, acceptedValues:ArrayList<Integer>, errorMsg:String): int
            {static} +getDoubleInput(prompt:String): double
            {static} +getDoubleInput(prompt:String, min:int): double
            {static} +getYesNoInput(prompt:String): boolean
            {static} +getScannerInput(): Scanner
        }

        class MenuItemCSVHelper [[../sg/edu/ntu/scse/cz2002/util/MenuItemCSVHelper.html]] {
            {static} -mInstance: MenuItemCSVHelper
            -menuItemCsv: String
            -MenuItemCSVHelper()
            + --MenuItemCSVHelper-- (filename:String)
            {static} +getInstance(): MenuItemCSVHelper
            +readFromCsv(): ArrayList<MenuItem>
            +writeToCsv(items:ArrayList<MenuItem>): void
        }

        class DateTimeFormatHelper [[../sg/edu/ntu/scse/cz2002/util/DateTimeFormatHelper.html]] {
            {static} -MILLIS_TO_DAYS: long
            {static} -TO_UTC_PLUS_8: long
            {static} +formatToStringDate(date:LocalDate): String
            {static} +formatToStringTime(time:LocalTime): String
            {static} +formatToLocalDate(date:String): LocalDate
            {static} +formatToLocalTime(time:String): LocalTime
            {static} +getTodayDate(getNextMonth:boolean): LocalDate
            {static} +getTimeNow(): LocalTime
            {static} +getTimeDifferenceMinutes(time1:LocalTime, time2:LocalTime): long
            {static} +compareIfBeforeToday(inputDate:LocalDate): boolean
            {static} +formatMillisToDateTime(millis:long): String
            {static} +checkResvTimeSession(resvTime:LocalTime, sessionStart:LocalTime, sessionEnd:LocalTime): boolean
            {static} + --formatToStringTodayDateTime-- (): String
            {static} +validateDate(date:String): boolean
            {static} +getSysTimeMillisWithSGTimeZone(): long
            {static} + --validateDate-- (d:int, m:int, y:int): boolean
        }

        CSVBaseHelper <|-- TableCSVHelper

        CSVBaseHelper <|-- PromoCSVHelper

        CSVBaseHelper <|-- InvoiceCSVHelper

        CSVBaseHelper <|-- StaffCSVHelper

        CSVBaseHelper <|-- ReservationCSVHelper

        CSVBaseHelper <|-- MenuItemCSVHelper

    }


    center footer UMLDoclet 1.1.3, PlantUML 1.2018.12
@enduml
